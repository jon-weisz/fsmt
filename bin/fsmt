#! /usr/bin/python

"""

This file is part of FINITE STATE MACHINE BASED TESTING.

Copyright(c) <Florian Lier, Norman Koester>
http://opensource.cit-ec.de/fsmt

This file may be licensed under the terms of the
GNU Lesser General Public License Version 3 (the ``LGPL''),
or (at your option) any later version.

Software distributed under the License is distributed
on an ``AS IS'' basis, WITHOUT WARRANTY OF ANY KIND, either
express or implied. See the LGPL for the specific language
governing rights and limitations.

You should have received a copy of the LGPL along with this
program. If not, go to http://www.gnu.org/licenses/lgpl.html
or write to the Free Software Foundation, Inc.,
51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.

The development of this software was supported by the
Excellence Cluster EXC 277 Cognitive Interaction Technology.
The Excellence Cluster EXC 277 is a grant of the Deutsche
Forschungsgemeinschaft (DFG) in the context of the German
Excellence Initiative.

Authors: Florian Lier, Norman Koester
<flier, nkoester>@techfak.uni-bielefeld.de

"""

from fsmtest.launcher import Launcher
from optparse import OptionParser
import getpass
import os


class FSMTest:
	"""
	Launcher class.
	"""

	def __init__(self, options, args):
		"""
		Constructor.
		:param options:
		:param args:
		"""
		self.options = options
		self.args = args
		self.fsm_launcher = None

	def run(self):
		self.fsm_launcher = Launcher(self.options.loglevel,
									 self.options.logfilelevel,
									 self.options.output,
									 self.options.disable_termcolor,
									 self.args)
		self.fsm_launcher.setup()
		self.fsm_launcher.run()


if __name__ == '__main__':

	parser = OptionParser(usage="Usage: %prog [options] PATH_TO_SCXML_FILE",
						  version="%prog master")
	parser.add_option("-o", "--output",
					  action="store",
					  dest="output",
					  default="/tmp/" + getpass.getuser() + "/fsmt/",
					  help=
					  "Set the logging path in which a subfolder \
					  $timestamp is created fo logging purposes, \
					  the default is: [/tmp/$USER/fsmt/]")

	parser.add_option("-l", "--loglevel",
					  action="store",
					  dest="loglevel",
					  default="INFO",
					  help=
					  "Set logging level for console output, \
					  Default: INFO, Available: [STREAM,DEBUG,INFO," +
					  "WARNING,CRITICAL,ERROR]")

	parser.add_option("-k", "--fileloglevel",
					  action="store",
					  dest="logfilelevel",
					  default="STREAM",
					  help=
					  "Set logging level _only_ for the log file, \
					  Default: STREAM, Available: [STREAM,DEBUG,INFO," +
					  "WARNING,CRITICAL,ERROR]")

	parser.add_option("-c", "--nocolour",
					  action="store_true",
					  dest="disable_termcolor",
					  default=False,
					  help=
					  "Disables colouring for terminal log output")

	(options, args) = parser.parse_args()

	if len(args) != 1:
		parser.print_help()
		print "\n\n"
		parser.error("Wrong number of arguments given, please see documentation for further information.")

	if not os.path.exists(args[ 0 ]):
		parser.error("The provided SCXML file at '%s' does not exist!") % args[ 0 ]

	fsmTest = FSMTest(options, args[ 0 ])
	fsmTest.run()

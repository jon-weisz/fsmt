Version 0.15
* Minor bug fixes
* Documentation
* Open Source Release


Version master
* Removed ROS wrappers as they do not work as desired
* Environment variables defined in the SCXML environment tag are now correctly 
  resolved during runtime can be used within components 
* Added new logger level called "STREAM" (5) which is below DEBUG (10) and is 
  used for output generated by file writers (pty log writer) and readers 
  (stdout observer)
* Added a global log (at STREAM level) that is always written on the log folder.
  Its level can be adjusted via the new command option '-k LEVEL'
* Fixed a bug concerning the logging output and reorganised logging folder 
  structure
* Added ZIP feature that zips the log folder upon completion of a run
* Many small bug fixes and improvements  


Version 0.13
* PIDObserver bug fix after premature exit of invoked component
* Added sphinx documentation and build target
* Gently remove child processes using SIGINT, SIGTERM, SIGKILL


Version 0.12
* Added fsmwsserver, the websocket server and basic visualisation
  capabilities
* Fixed exit 1 bug, now the FSM quits as expected
* Rewrote the logreader, now logs are read incrementally, based on the
  already consumed amount of bytes, saves CPU time


Version 0.11c
* Fixed parallel bugs, in process communicator. State was
  changed, even if the processes did not return a success.
* Added a lot of example.ini files in to the configuration folder.
* Now fsmt is Killing components in the reversed order (last comp
  started gets killed first. Example: roscore, rosbag, rosbag-1 -->
  kill rosbag-1, rosbag, roscore.
* Small improvements in logging output, more user-friendly.
* Reduced CPU load for observers.
* Fixed forced lower-case bug in fsminiparser, example: DISPLAY.


Version 0.11b
* Fixed empty result assessment run, this release adds a default assessment step
  which basically does "nothing". This is just a convenience feature if you 
  don't know what "to assess" when starting using fsmt framework.
* CTRL+C now lets fsmt exit gracefully, which means we try to terminate all 
  processes.
* Fixed "no check bug". Now you can set checkExecution to False without blocking
  the SM, anyway - setting check_exec to false doesn't make sense at all, at 
  least within this framework.
* Fixed blocking STDOUT observer.
* Fixed blocking Observer bugs.
* Added basic BlockDiag support.
* Added STDOUTEXCLUDE observer.
* Added command/path check (valid path?)


Version 0.11a
* Fixed huge buffer bug in PTY stdout observer